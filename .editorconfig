###############################
# Core EditorConfig Options   #
###############################

root = true

# Config files
[*.{json,yml,yaml}]
indent_size = 2

# Xml project files
[*.{csproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2

# Xml files
[*.{xml,stylecop,resx,ruleset}]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

# All files
[*]
indent_style = space
trim_trailing_whitespace = true
end_of_line = crlf

# Code files
[*.{cs,csx,ps1}]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

# Javascript files
[*.js]
indent_size = 2
charset = utf-8
insert_final_newline = true
end_of_line = lf
max_line_length = off

###############################
# .NET Coding Conventions     #
###############################
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2017

[*.cs]
# Organize usings
dotnet_sort_system_directives_first = true

# this. preferences
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:silent

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# Naming Conventions          #
###############################
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions?view=vs-2017

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
dotnet_naming_style.camel_case_style.capitalization = camel_case

# Constant fields
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style

# Static fields
dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_rule.static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_fields_should_be_pascal_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_pascal_case.style = pascal_case_style

# Fields
dotnet_naming_symbols.fields.applicable_kinds = field
dotnet_naming_style.starts_with_m.capitalization = camel_case
dotnet_naming_style.starts_with_m.required_prefix = _
dotnet_naming_rule.fields_should_be_prefixed.symbols = fields
dotnet_naming_rule.fields_should_be_prefixed.style = starts_with_m
dotnet_naming_rule.fields_should_be_prefixed.severity = warning

# Async methods
dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.required_modifiers = async
dotnet_naming_style.ends_with_async.capitalization = pascal_case
dotnet_naming_style.ends_with_async.required_suffix = Async
dotnet_naming_rule.async_methods_should_end_with_async.symbols = async_methods
dotnet_naming_rule.async_methods_should_end_with_async.style = ends_with_async
dotnet_naming_rule.async_methods_should_end_with_async.severity = warning

# Methods
dotnet_naming_symbols.methods.applicable_kinds = method
dotnet_naming_rule.methods_use_pascal_case.symbols = methods
dotnet_naming_rule.methods_use_pascal_case.style = pascal_case_style
dotnet_naming_rule.methods_use_pascal_case.severity = warning

# Namespaces
dotnet_naming_symbols.namespaces.applicable_kinds = namespace
dotnet_naming_rule.namespaces_use_pascal_case.symbols = namespaces
dotnet_naming_rule.namespaces_use_pascal_case.style = pascal_case_style
dotnet_naming_rule.namespaces_use_pascal_case.severity = warning

# Types
dotnet_naming_symbols.types.applicable_kinds = class, struct, enum, delegate
dotnet_naming_rule.types_use_pascal_case.symbols = types
dotnet_naming_rule.types_use_pascal_case.style = pascal_case_style
dotnet_naming_rule.types_use_pascal_case.severity = warning

# Properties
dotnet_naming_symbols.properties.applicable_kinds = property
dotnet_naming_rule.properties_use_pascal_case.symbols = properties
dotnet_naming_rule.properties_use_pascal_case.style = pascal_case_style
dotnet_naming_rule.properties_use_pascal_case.severity = warning

# Parameters
dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_rule.parameters_camel_case_start_with_m_underscore.symbols = parameters
dotnet_naming_rule.parameters_camel_case_start_with_m_underscore.style = camel_case_style
dotnet_naming_rule.parameters_camel_case_start_with_m_underscore.severity = warning

# Local variables
dotnet_naming_symbols.local_variables.applicable_kinds = local
dotnet_naming_symbols.local_variables.applicable_accessibilities = local
dotnet_naming_rule.local_variables_camel_case_start_with_m_underscore.symbols = local_variables
dotnet_naming_rule.local_variables_camel_case_start_with_m_underscore.style = camel_case_style
dotnet_naming_rule.local_variables_camel_case_start_with_m_underscore.severity = warning

###############################
# C# Coding Conventions       #
###############################

# var preferences
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:silent

# Expression-bodied members
csharp_style_expression_bodied_methods = when_on_single_line:silent
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_operators = when_on_single_line:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = when_on_single_line:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Expression-level preferences
csharp_prefer_braces = true:none
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

###############################
# C# Formatting Rules         #
###############################

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

###############################
# Static Analysis             #
###############################

# .Net analyzers

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = none

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = none

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = none

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = none

#CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = none

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none

# RCS1194: Implement exception constructors.
dotnet_diagnostic.RCS1194.severity = suggestion

# StyleCop

# SA1005: Single line comments should begin with single space
dotnet_diagnostic.SA1005.severity = suggestion

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = none

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none

# SA1512 Single-line comments should not be followed by blank line
dotnet_diagnostic.SA1512.severity = suggestion

# SA1515: Single-line comment should be preceded by blank line
dotnet_diagnostic.SA1515.severity = suggestion

# SA1633 The file header is missing or not located at the top of the file
dotnet_diagnostic.SA1633.severity = none

# SonarAnalyzer

# S125: Sections of code should not be commented out
dotnet_diagnostic.S125.severity = suggestion

# S1075: URIs should not be hardcoded
dotnet_diagnostic.S1075.severity = suggestion

# S3925:"ISerializable" should be implemented correctly
dotnet_diagnostic.S3925.severity = none

###############################
# C# 9 temporary suppressions #
###############################
# We do NOT actually want to suppress these rules but StyleCop does not support C# 9 yet.

# SA1649: File name must match first type name
dotnet_diagnostic.SA1649.severity = none

# S1121: Assignments should not be made from within sub-expressions
dotnet_diagnostic.S1121.severity = none

###############################
# C# 10 temporary suppressions #
###############################
# S3903: Types should be defined in named namespaces
dotnet_diagnostic.S3903.severity = none

# SA1000: Keywords should be spaced correctly
dotnet_diagnostic.SA1000.severity = none